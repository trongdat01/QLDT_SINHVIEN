<!DOCTYPE html>
<html lang="vi">

<head>
    <%- include('../partials/head', { title: 'Thống kê Điểm' }) %>
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <style>
            .chart-container {
                position: relative;
                margin: auto;
                height: 300px;
                margin-bottom: 30px;
            }

            .filter-row {
                margin-bottom: 20px;
            }
        </style>
</head>

<body>
    <%- include('../partials/admin-navbar') %>

        <div class="container mt-4">
            <h1 class="mb-4">Thống kê Điểm</h1>

            <div class="row filter-row">
                <div class="col-md-3">
                    <select id="filterType" class="form-select">
                        <option value="course">Theo học phần</option>
                        <option value="department">Theo khoa</option>
                        <option value="semester">Theo học kỳ</option>
                        <option value="student">Theo sinh viên</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <select id="filterValue" class="form-select">
                        <option value="">-- Chọn giá trị --</option>
                        <!-- Options will be loaded by JavaScript -->
                    </select>
                </div>
                <div class="col-md-3">
                    <button id="applyFilter" class="btn btn-primary">Áp dụng</button>
                    <button id="resetFilter" class="btn btn-secondary ms-2">Đặt lại</button>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Phân phối điểm</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="gradeDistributionChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Tỷ lệ đạt/học lại</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="passFailChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Điểm trung bình theo thời gian</h5>
                        </div>
                        <div class="card-body">
                            <div class="chart-container">
                                <canvas id="avgGradeChart"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-md-12">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between">
                            <h5 class="card-title mb-0">Bảng thống kê chi tiết</h5>
                            <button id="exportData" class="btn btn-sm btn-success">Xuất dữ liệu</button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-striped table-bordered" id="statisticsTable">
                                    <thead>
                                        <tr>
                                            <th>Chỉ số</th>
                                            <th>Giá trị</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td>Tổng số điểm</td>
                                            <td id="totalGrades">0</td>
                                        </tr>
                                        <tr>
                                            <td>Điểm trung bình</td>
                                            <td id="avgGrade">0</td>
                                        </tr>
                                        <tr>
                                            <td>Điểm cao nhất</td>
                                            <td id="maxGrade">0</td>
                                        </tr>
                                        <tr>
                                            <td>Điểm thấp nhất</td>
                                            <td id="minGrade">0</td>
                                        </tr>
                                        <tr>
                                            <td>Số lượng đạt</td>
                                            <td id="passCount">0</td>
                                        </tr>
                                        <tr>
                                            <td>Số lượng học lại</td>
                                            <td id="failCount">0</td>
                                        </tr>
                                        <tr>
                                            <td>Tỷ lệ đạt (%)</td>
                                            <td id="passRate">0%</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <%- include('../partials/footer') %>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    // Sample data for demonstration
                    const sampleData = {
                        distribution: [5, 10, 15, 20, 25, 15, 10],
                        passRate: 75,
                        failRate: 25,
                        timelineLabels: ['HK1 2022', 'HK2 2022', 'HK3 2022', 'HK1 2023', 'HK2 2023'],
                        timelineData: [6.2, 6.5, 6.8, 7.0, 7.2],
                        stats: {
                            total: 100,
                            avg: 6.8,
                            max: 9.5,
                            min: 2.0,
                            passCount: 75,
                            failCount: 25
                        }
                    };

                    // Initialize charts with sample data
                    initGradeDistributionChart(sampleData.distribution);
                    initPassFailChart(sampleData.passRate, sampleData.failRate);
                    initAvgGradeChart(sampleData.timelineLabels, sampleData.timelineData);
                    updateStatisticsTable(sampleData.stats);

                    // Handle filter changes
                    document.getElementById('filterType').addEventListener('change', function () {
                        const filterType = this.value;
                        const filterValueSelect = document.getElementById('filterValue');

                        // Clear existing options
                        filterValueSelect.innerHTML = '<option value="">-- Chọn giá trị --</option>';

                        // Add new options based on filter type
                        switch (filterType) {
                            case 'course':
                                addOptions(filterValueSelect, [
                                    { value: 'CS101', text: 'CS101 - Lập trình cơ bản' },
                                    { value: 'CS201', text: 'CS201 - Cấu trúc dữ liệu' },
                                    { value: 'CS301', text: 'CS301 - Cơ sở dữ liệu' }
                                ]);
                                break;
                            case 'department':
                                addOptions(filterValueSelect, [
                                    { value: 'CNTT', text: 'Công nghệ thông tin' },
                                    { value: 'QTKD', text: 'Quản trị kinh doanh' },
                                    { value: 'KTMT', text: 'Kỹ thuật máy tính' }
                                ]);
                                break;
                            case 'semester':
                                addOptions(filterValueSelect, [
                                    { value: '1-2022', text: 'Học kỳ 1 - 2022' },
                                    { value: '2-2022', text: 'Học kỳ 2 - 2022' },
                                    { value: '1-2023', text: 'Học kỳ 1 - 2023' }
                                ]);
                                break;
                            case 'student':
                                addOptions(filterValueSelect, [
                                    { value: 'SV001', text: 'SV001 - Nguyễn Văn A' },
                                    { value: 'SV002', text: 'SV002 - Trần Thị B' },
                                    { value: 'SV003', text: 'SV003 - Lê Văn C' }
                                ]);
                                break;
                        }
                    });

                    // Apply filter button
                    document.getElementById('applyFilter').addEventListener('click', function () {
                        const filterType = document.getElementById('filterType').value;
                        const filterValue = document.getElementById('filterValue').value;

                        if (!filterValue) {
                            alert('Vui lòng chọn giá trị lọc');
                            return;
                        }

                        // In a real app, you would fetch data from server based on filters
                        // For demo, we'll just show different random data

                        const newData = generateRandomData();

                        // Update charts
                        updateGradeDistributionChart(newData.distribution);
                        updatePassFailChart(newData.passRate, newData.failRate);
                        updateAvgGradeChart(newData.timelineLabels, newData.timelineData);
                        updateStatisticsTable(newData.stats);
                    });

                    // Reset filter button
                    document.getElementById('resetFilter').addEventListener('click', function () {
                        document.getElementById('filterType').value = 'course';
                        document.getElementById('filterValue').innerHTML = '<option value="">-- Chọn giá trị --</option>';

                        // Reset to sample data
                        updateGradeDistributionChart(sampleData.distribution);
                        updatePassFailChart(sampleData.passRate, sampleData.failRate);
                        updateAvgGradeChart(sampleData.timelineLabels, sampleData.timelineData);
                        updateStatisticsTable(sampleData.stats);
                    });

                    // Export data button
                    document.getElementById('exportData').addEventListener('click', function () {
                        alert('Tính năng xuất dữ liệu sẽ được triển khai sau');
                    });

                    // Helper functions
                    function addOptions(selectElement, options) {
                        options.forEach(option => {
                            const optElement = document.createElement('option');
                            optElement.value = option.value;
                            optElement.textContent = option.text;
                            selectElement.appendChild(optElement);
                        });
                    }

                    function generateRandomData() {
                        const passRate = Math.floor(Math.random() * 40) + 60; // 60-100%
                        return {
                            distribution: [
                                Math.floor(Math.random() * 10),
                                Math.floor(Math.random() * 15),
                                Math.floor(Math.random() * 20),
                                Math.floor(Math.random() * 25),
                                Math.floor(Math.random() * 20),
                                Math.floor(Math.random() * 15),
                                Math.floor(Math.random() * 10)
                            ],
                            passRate: passRate,
                            failRate: 100 - passRate,
                            timelineLabels: ['HK1 2022', 'HK2 2022', 'HK3 2022', 'HK1 2023', 'HK2 2023'],
                            timelineData: [
                                (Math.random() * 2 + 5).toFixed(1),
                                (Math.random() * 2 + 5).toFixed(1),
                                (Math.random() * 2 + 5).toFixed(1),
                                (Math.random() * 2 + 5).toFixed(1),
                                (Math.random() * 2 + 5).toFixed(1)
                            ],
                            stats: {
                                total: Math.floor(Math.random() * 50) + 50,
                                avg: (Math.random() * 2 + 5).toFixed(1),
                                max: (Math.random() * 1 + 9).toFixed(1),
                                min: (Math.random() * 3 + 1).toFixed(1),
                                passCount: Math.floor(Math.random() * 40) + 60,
                                failCount: Math.floor(Math.random() * 40)
                            }
                        };
                    }

                    // Chart initialization functions
                    let gradeDistributionChart, passFailChart, avgGradeChart;

                    function initGradeDistributionChart(data) {
                        const ctx = document.getElementById('gradeDistributionChart').getContext('2d');
                        gradeDistributionChart = new Chart(ctx, {
                            type: 'bar',
                            data: {
                                labels: ['0-1', '1-2', '2-3', '3-4', '4-5', '5-7', '7-10'],
                                datasets: [{
                                    label: 'Số lượng điểm',
                                    data: data,
                                    backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                    borderColor: 'rgba(54, 162, 235, 1)',
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                scales: {
                                    y: {
                                        beginAtZero: true
                                    }
                                },
                                responsive: true,
                                maintainAspectRatio: false
                            }
                        });
                    }

                    function updateGradeDistributionChart(data) {
                        gradeDistributionChart.data.datasets[0].data = data;
                        gradeDistributionChart.update();
                    }

                    function initPassFailChart(passRate, failRate) {
                        const ctx = document.getElementById('passFailChart').getContext('2d');
                        passFailChart = new Chart(ctx, {
                            type: 'pie',
                            data: {
                                labels: ['Đạt', 'Học lại'],
                                datasets: [{
                                    data: [passRate, failRate],
                                    backgroundColor: [
                                        'rgba(75, 192, 192, 0.5)',
                                        'rgba(255, 99, 132, 0.5)'
                                    ],
                                    borderColor: [
                                        'rgba(75, 192, 192, 1)',
                                        'rgba(255, 99, 132, 1)'
                                    ],
                                    borderWidth: 1
                                }]
                            },
                            options: {
                                responsive: true,
                                maintainAspectRatio: false
                            }
                        });
                    }

                    function updatePassFailChart(passRate, failRate) {
                        passFailChart.data.datasets[0].data = [passRate, failRate];
                        passFailChart.update();
                    }

                    function initAvgGradeChart(labels, data) {
                        const ctx = document.getElementById('avgGradeChart').getContext('2d');
                        avgGradeChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: 'Điểm trung bình',
                                    data: data,
                                    backgroundColor: 'rgba(153, 102, 255, 0.5)',
                                    borderColor: 'rgba(153, 102, 255, 1)',
                                    borderWidth: 2,
                                    tension: 0.4
                                }]
                            },
                            options: {
                                scales: {
                                    y: {
                                        beginAtZero: false,
                                        min: 0,
                                        max: 10
                                    }
                                },
                                responsive: true,
                                maintainAspectRatio: false
                            }
                        });
                    }

                    function updateAvgGradeChart(labels, data) {
                        avgGradeChart.data.labels = labels;
                        avgGradeChart.data.datasets[0].data = data;
                        avgGradeChart.update();
                    }

                    function updateStatisticsTable(stats) {
                        document.getElementById('totalGrades').textContent = stats.total;
                        document.getElementById('avgGrade').textContent = stats.avg;
                        document.getElementById('maxGrade').textContent = stats.max;
                        document.getElementById('minGrade').textContent = stats.min;
                        document.getElementById('passCount').textContent = stats.passCount;
                        document.getElementById('failCount').textContent = stats.failCount;
                        document.getElementById('passRate').textContent = ((stats.passCount / stats.total) * 100).toFixed(1) + '%';
                    }
                });
            </script>
</body>

</html>